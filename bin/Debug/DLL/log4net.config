<log4net>

  <!--记录日志到数据库-->

  <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">
    <!--
      bufferSize，缓存sql的条数；
      只有日志sql 大于等于 设置的条数后才执行插入到数据库中的操作；
      如果为0，表示 立刻执行插入数据库操作，或者程序/网站 关闭后 执行插入操作
      -->
    <bufferSize value="0" />
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <!--数据库连接字符串-->
    <connectionString value="server=.;database=DaiWan;user id=sa;password=sa;" />
    <!--插入到数据库的sql格式定义-->
    <commandText value="INSERT INTO dbo.[log] (LogDate,LogThread,LogLevel,LogLogger,LogMessage,LogException) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
    <parameter>
      <parameterName value="@log_date" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" />
    </parameter>
    <parameter>
      <parameterName value="@thread" />
      <dbType value="String" />
      <size value="50" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%t" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@log_level" />
      <dbType value="String" />
      <size value="200" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%p" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@logger" />
      <dbType value="String" />
      <size value="200" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%logger" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@message" />
      <dbType value="String" />
      <size value="2000" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%m" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@exception" />
      <dbType value="String" />
      <size value="2000" />
      <layout type="log4net.Layout.ExceptionLayout" />
    </parameter>
  </appender>
  <!-- 日志文件部分log输出格式的设定 -->
  <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
    <!--定义文件存放位置-->
    <file value="log\\"/>
    <appendToFile value="true"/>
    <rollingStyle value="Date"/>
    <datePattern value="yyyyMMdd'.txt'"/>
    <staticLogFileName value="false"/>
    <param name="MaxSizeRollBackups" value="100"/>
    <layout type="log4net.Layout.PatternLayout">
      <!--每条日志末尾的文字说明-->
      <!--输出格式-->
      <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
      <conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别：  %-5level %n出错类：%logger property: [%property{NDC}] - %n错误描述：%message%newline %n"/>
    </layout>
  </appender>

  <!--记录日志到控制台-->
  <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="[时间]:%d%n[级别]:%p%n[对象]:%c%n[内容]:%m%n%n"></conversionPattern>
    </layout>
  </appender>

  <!--
      默认的日志对象配置
      level：指定日志的输出级别
      appender-ref：引用哪些附着器
     -->
  <root>
    <level value="Info"></level>
    <appender-ref ref="ADONetAppender"></appender-ref>
    <!--<appender-ref ref="RollingLogFileAppender"></appender-ref>
    <appender-ref ref="ConsoleAppender"></appender-ref>-->
  </root>
</log4net>